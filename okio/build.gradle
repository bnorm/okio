apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
  jvm {
    withJava()
  }
  js() {
    configure([compilations.main, compilations.test]) {
      tasks.getByName(compileKotlinTaskName).kotlinOptions {
        moduleKind = "commonjs"
      }
    }
    nodejs()
  }
  iosX64() {
    binaries {
      framework()
    }
  }
  iosArm64() {
    binaries {
      framework()
    }
  }
  // Required to generate tests tasks: https://youtrack.jetbrains.com/issue/KT-26547
  linuxX64() {
//    compilations.main.cinterops {
//      openssl {
//        includeDirs.headerFilterOnly("/usr/include", "/usr/include/x86_64-linux-gnu")
//      }
//    }
  }
  macosX64() {
//    compilations.main.cinterops {
//      openssl {
//        includeDirs.headerFilterOnly("/opt/local/include", "/usr/local/include")
//      }
//    }
  }
  mingwX64('winX64') {
    compilations.main.cinterops {
      openssl {
        includeDirs.headerFilterOnly("C:/msys64/mingw64/include")
      }
    }
  }
  sourceSets {
    commonMain {
      dependencies {
        api deps.kotlin.stdLib.common
      }
    }
    commonTest {
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.kotlin.test.annotations
      }
    }
    jvmMain {
      dependencies {
        api deps.kotlin.stdLib.jdk6
        compileOnly deps.animalSniffer.annotations
      }
    }
    jvmTest {
      dependencies {
        implementation deps.test.junit
        implementation deps.test.assertj
        implementation deps.kotlin.test.jdk
      }
    }
    jsMain {
      dependencies {
        api deps.kotlin.stdLib.js
      }
    }
    jsTest {
      dependencies {
        implementation deps.kotlin.test.js
      }
    }
    nativeMain {
      dependsOn commonMain
    }
    nativeTest {
      dependsOn commonTest
    }

    configure([iosX64Main, iosArm64Main, linuxX64Main, macosX64Main, winX64Main]) {
      dependsOn nativeMain
    }
    configure([iosX64Test, iosArm64Test, linuxX64Test, macosX64Test, winX64Test]) {
      dependsOn nativeTest
    }
  }
}

apply from: 'jvm/jvm.gradle'
apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"
